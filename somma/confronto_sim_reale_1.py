from qiskit import Aer, execute, QuantumCircuit, ClassicalRegister, QuantumRegister, IBMQ, transpile
from qiskit.tools.monitor import job_monitor
from qiskit.visualization import plot_histogram
from qiskit.converters import circuit_to_dag
import time

first = '10' 
second = '11' 

l = len(first)
l2 = len(second)
if l > l2:
     n = l
else:
     n = l2

a = QuantumRegister(n) #First number
b = QuantumRegister(n+1) #Second number, then sum
c = QuantumRegister(n) #Carry bits
cl = ClassicalRegister(n+1) #Classical output
#Combining all of them into one quantum circuit
qc = QuantumCircuit(a, b, c, cl)

#Setting up the registers using the values inputted
for i in range(l):
    if first[i] == "1":
       qc.x(a[l - (i+1)]) #Flip the qubit from 0 to 1
for i in range(l2):
   if second[i] == "1":
      qc.x(b[l2 - (i+1)]) #Flip the qubit from 0 to 1

#Implementing a carry gate that is applied on all (c[i], a[i], b[i]) #with output fed to c[i+1]
for i in range(n-1):
    qc.ccx(a[i], b[i], c[i+1])
    qc.cx(a[i], b[i])
    qc.ccx(c[i], b[i], c[i+1])

#For the last iteration of the carry gate, instead of feeding the #result to c[n], we use b[n], which is why c has only n bits, with #c[n-1] being the last carry bit
qc.ccx(a[n-1], b[n-1], b[n])
qc.cx(a[n-1], b[n-1])
qc.ccx(c[n-1], b[n-1], b[n])

#Reversing the gate operation performed on b[n-1]
qc.cx(c[n-1], b[n-1])
#Reversing the gate operations performed during the carry gate implementations
#This is done to ensure the sum gates are fed with the correct input bit states
for i in range(n-1):
    qc.ccx(c[(n-2)-i], b[(n-2)-i], c[(n-1)-i])
    qc.cx(a[(n-2)-i], b[(n-2)-i])
    qc.ccx(a[(n-2)-i], b[(n-2)-i], c[(n-1)-i])
    #These two operations act as a sum gate; if a control bit is at                
    #the 1> state then the target bit b[(n-2)-i] is flipped
    qc.cx(c[(n-2)-i], b[(n-2)-i])
    qc.cx(a[(n-2)-i], b[(n-2)-i])

#Measure qubits and store results in classical register cl
for i in range(n+1):
    qc.measure(b[i], cl[i])

#Set chosen backend and execute job
num_shots = 5000 #Setting the number of times to repeat measurement
selected_backend = "statevector_simulator"
# t = time.time()
# job = execute(qc, Aer.get_backend(selected_backend), shots=num_shots)
# t_2 = time.time() - t
# print('Il simulatore ha impiegato ' + str(t_2) + ' secondi')
# #Get results of program
# job_stats = job.result().get_counts()
# print("statevector_simulator: " + str(job_stats))
print(qc.depth())
transpile_circuit = transpile(qc, Aer.get_backend(selected_backend), basis_gates = ['cx', 'id', 'rz', 'sx', 'x'])
dag_circuit = circuit_to_dag(transpile_circuit)
print(dag_circuit.count_ops_longest_path())
print('Profondit√† circuito scritto in qiskit: ' + str(qc.depth()))
print(qc)
# qc.draw(output='mpl', filename='esperimento_su_width_1.png')

# transpiler su simulatore locale

# from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
# from numpy import pi

# from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
# from numpy import pi

# qreg_q = QuantumRegister(27, 'q')
# creg_c0 = ClassicalRegister(7, 'c0')
# circuit = QuantumCircuit(qreg_q, creg_c0)

# circuit.x(qreg_q[0])
# circuit.x(qreg_q[1])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[0])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.rz(1.5707963267948966, qreg_q[2])
# circuit.sx(qreg_q[2])
# circuit.rz(1.5707963267948966, qreg_q[2])
# circuit.rz(1.5707963267948966, qreg_q[3])
# circuit.sx(qreg_q[3])
# circuit.rz(1.5707963267948966, qreg_q[3])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[0])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.rz(-0.7853981633974483, qreg_q[1])
# circuit.x(qreg_q[4])
# circuit.cx(qreg_q[1], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[4])
# circuit.rz(1.5707963267948966, qreg_q[5])
# circuit.sx(qreg_q[5])
# circuit.rz(1.5707963267948966, qreg_q[5])
# circuit.rz(1.5707963267948966, qreg_q[8])
# circuit.sx(qreg_q[8])
# circuit.rz(1.5707963267948966, qreg_q[8])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.rz(-0.7853981633974483, qreg_q[3])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.rz(1.5707963267948966, qreg_q[9])
# circuit.sx(qreg_q[9])
# circuit.rz(1.5707963267948966, qreg_q[9])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.cx(qreg_q[4], qreg_q[1])
# circuit.rz(0.7853981633974483, qreg_q[1])
# circuit.rz(0.7853981633974483, qreg_q[7])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.rz(1.5707963267948966, qreg_q[11])
# circuit.sx(qreg_q[11])
# circuit.rz(1.5707963267948966, qreg_q[11])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.x(qreg_q[12])
# circuit.x(qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.rz(-0.7853981633974483, qreg_q[13])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[8], qreg_q[9])
# circuit.cx(qreg_q[9], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[9])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.rz(-0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[0])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[4])
# circuit.rz(0.7853981633974483, qreg_q[1])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[0])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.rz(0.7853981633974483, qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.rz(-0.7853981633974483, qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[3], qreg_q[2])
# circuit.rz(-0.7853981633974483, qreg_q[2])
# circuit.rz(0.7853981633974483, qreg_q[3])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[1], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[4])
# circuit.cx(qreg_q[2], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[0])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.rz(0.7853981633974483, qreg_q[0])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.rz(0.7853981633974483, qreg_q[2])
# circuit.rz(-0.7853981633974483, qreg_q[3])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[4], qreg_q[1])
# circuit.rz(-0.7853981633974483, qreg_q[1])
# circuit.rz(0.7853981633974483, qreg_q[4])
# circuit.cx(qreg_q[1], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[4])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[0])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[2], qreg_q[1])
# circuit.rz(-0.7853981633974483, qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.rz(0.7853981633974483, qreg_q[7])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.rz(-0.7853981633974483, qreg_q[7])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.x(qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[8])
# circuit.x(qreg_q[19])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[11])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[19], qreg_q[22])
# circuit.cx(qreg_q[22], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[22])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.cx(qreg_q[20], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.rz(0.7853981633974483, qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.rz(0.7853981633974483, qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.rz(-0.7853981633974483, qreg_q[13])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.cx(qreg_q[19], qreg_q[22])
# circuit.cx(qreg_q[22], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[22])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[20], qreg_q[19])
# circuit.rz(-0.7853981633974483, qreg_q[19])
# circuit.rz(0.7853981633974483, qreg_q[20])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[11])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.rz(-0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.rz(0.7853981633974483, qreg_q[10])
# circuit.rz(0.7853981633974483, qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.rz(0.7853981633974483, qreg_q[15])
# circuit.cx(qreg_q[19], qreg_q[22])
# circuit.cx(qreg_q[22], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[22])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.rz(-0.7853981633974483, qreg_q[12])
# circuit.rz(0.7853981633974483, qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.cx(qreg_q[19], qreg_q[22])
# circuit.cx(qreg_q[22], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[22])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.rz(-0.7853981633974483, qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.rz(-0.7853981633974483, qreg_q[10])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.rz(0.7853981633974483, qreg_q[19])
# circuit.rz(-0.7853981633974483, qreg_q[20])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.cx(qreg_q[20], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.rz(-0.7853981633974483, qreg_q[13])
# circuit.rz(0.7853981633974483, qreg_q[22])
# circuit.cx(qreg_q[19], qreg_q[22])
# circuit.cx(qreg_q[22], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[22])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.rz(-0.7853981633974483, qreg_q[19])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.rz(-0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[11])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.rz(-0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[8], qreg_q[9])
# circuit.cx(qreg_q[9], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[9])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.rz(0.7853981633974483, qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.rz(-0.7853981633974483, qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.rz(2.356194490192345, qreg_q[13])
# circuit.sx(qreg_q[13])
# circuit.rz(1.5707963267948966, qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.rz(0.7853981633974483, qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.rz(-0.7853981633974483, qreg_q[10])
# circuit.rz(0.7853981633974483, qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.rz(0.7853981633974483, qreg_q[11])
# circuit.cx(qreg_q[8], qreg_q[9])
# circuit.cx(qreg_q[9], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[9])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[11])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.rz(2.356194490192345, qreg_q[14])
# circuit.sx(qreg_q[14])
# circuit.rz(1.5707963267948966, qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.rz(0.7853981633974483, qreg_q[16])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.rz(-0.7853981633974483, qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.rz(0.7853981633974483, qreg_q[19])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.rz(-0.7853981633974483, qreg_q[16])
# circuit.rz(2.356194490192345, qreg_q[19])
# circuit.sx(qreg_q[19])
# circuit.rz(1.5707963267948966, qreg_q[19])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.cx(qreg_q[20], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.rz(0.7853981633974483, qreg_q[3])
# circuit.rz(-0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.rz(-0.7853981633974483, qreg_q[3])
# circuit.rz(0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.rz(2.356194490192345, qreg_q[8])
# circuit.sx(qreg_q[8])
# circuit.rz(1.5707963267948966, qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[8], qreg_q[9])
# circuit.cx(qreg_q[9], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[9])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[11])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.rz(2.356194490192345, qreg_q[14])
# circuit.sx(qreg_q[14])
# circuit.rz(1.5707963267948966, qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.rz(0.7853981633974483, qreg_q[10])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.rz(-0.7853981633974483, qreg_q[10])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.rz(2.356194490192345, qreg_q[12])
# circuit.sx(qreg_q[12])
# circuit.rz(1.5707963267948966, qreg_q[12])
# circuit.rz(0.7853981633974483, qreg_q[7])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.rz(2.356194490192345, qreg_q[10])
# circuit.sx(qreg_q[10])
# circuit.rz(1.5707963267948966, qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[15])
# circuit.rz(-0.7853981633974483, qreg_q[7])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.rz(-0.7853981633974483, qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.rz(0.7853981633974483, qreg_q[13])
# circuit.rz(-0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.rz(0.7853981633974483, qreg_q[11])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.rz(-0.7853981633974483, qreg_q[13])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.rz(0.7853981633974483, qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[11])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.rz(1.5707963267948966, qreg_q[13])
# circuit.sx(qreg_q[13])
# circuit.rz(1.5707963267948966, qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.rz(2.356194490192345, qreg_q[16])
# circuit.sx(qreg_q[16])
# circuit.rz(1.5707963267948966, qreg_q[16])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.cx(qreg_q[20], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.cx(qreg_q[20], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[20])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[11])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[11])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.rz(-0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.rz(0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.rz(-0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.rz(2.356194490192345, qreg_q[3])
# circuit.sx(qreg_q[3])
# circuit.rz(1.5707963267948966, qreg_q[3])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[2])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[0])
# circuit.cx(qreg_q[0], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[1])
# circuit.cx(qreg_q[1], qreg_q[4])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[5])
# circuit.rz(-0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.rz(1.5707963267948966, qreg_q[11])
# circuit.sx(qreg_q[11])
# circuit.rz(1.5707963267948966, qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.rz(-0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.rz(0.7853981633974483, qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.rz(-0.7853981633974483, qreg_q[16])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.rz(-0.7853981633974483, qreg_q[16])
# circuit.rz(0.7853981633974483, qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.rz(-0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.rz(0.7853981633974483, qreg_q[13])
# circuit.rz(-0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.rz(2.356194490192345, qreg_q[12])
# circuit.sx(qreg_q[12])
# circuit.rz(1.5707963267948966, qreg_q[12])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.rz(0.7853981633974483, qreg_q[13])
# circuit.rz(-0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.rz(1.5707963267948966, qreg_q[19])
# circuit.sx(qreg_q[19])
# circuit.rz(1.5707963267948966, qreg_q[19])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[19], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[19])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[16], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[16])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[2])
# circuit.cx(qreg_q[2], qreg_q[3])
# circuit.cx(qreg_q[8], qreg_q[9])
# circuit.cx(qreg_q[9], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[9])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.rz(-0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[11])
# circuit.rz(0.7853981633974483, qreg_q[14])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.rz(-0.7853981633974483, qreg_q[11])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[11])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.rz(-0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.rz(0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[8], qreg_q[5])
# circuit.rz(-0.7853981633974483, qreg_q[5])
# circuit.cx(qreg_q[5], qreg_q[3])
# circuit.cx(qreg_q[3], qreg_q[5])
# circuit.rz(2.356194490192345, qreg_q[3])
# circuit.sx(qreg_q[3])
# circuit.rz(1.5707963267948966, qreg_q[3])
# circuit.rz(0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.rz(0.7853981633974483, qreg_q[5])
# circuit.rz(-0.7853981633974483, qreg_q[8])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[11], qreg_q[8])
# circuit.rz(1.5707963267948966, qreg_q[11])
# circuit.sx(qreg_q[11])
# circuit.rz(1.5707963267948966, qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[11])
# circuit.cx(qreg_q[11], qreg_q[14])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[14], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[14])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.rz(-0.7853981633974483, qreg_q[13])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.rz(0.7853981633974483, qreg_q[12])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.rz(-0.7853981633974483, qreg_q[12])
# circuit.rz(0.7853981633974483, qreg_q[13])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.rz(0.7853981633974483, qreg_q[13])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.rz(-0.7853981633974483, qreg_q[12])
# circuit.rz(0.7853981633974483, qreg_q[15])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[13], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[13])
# circuit.cx(qreg_q[5], qreg_q[8])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.rz(-0.7853981633974483, qreg_q[12])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[4])
# circuit.cx(qreg_q[4], qreg_q[7])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.rz(0.7853981633974483, qreg_q[10])
# circuit.cx(qreg_q[12], qreg_q[10])
# circuit.rz(-0.7853981633974483, qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[7])
# circuit.rz(0.7853981633974483, qreg_q[12])
# circuit.cx(qreg_q[7], qreg_q[10])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.rz(0.7853981633974483, qreg_q[10])
# circuit.rz(-0.7853981633974483, qreg_q[12])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.cx(qreg_q[15], qreg_q[12])
# circuit.cx(qreg_q[10], qreg_q[12])
# circuit.rz(2.356194490192345, qreg_q[7])
# circuit.sx(qreg_q[7])
# circuit.rz(1.5707963267948966, qreg_q[7])
# circuit.barrier(qreg_q[12], qreg_q[9], qreg_q[4], qreg_q[7], qreg_q[22], qreg_q[13], qreg_q[6], qreg_q[10], qreg_q[0], qreg_q[20], qreg_q[2], qreg_q[3], qreg_q[16], qreg_q[1], qreg_q[15], qreg_q[11], qreg_q[19], qreg_q[17], qreg_q[18], qreg_q[8], qreg_q[14], qreg_q[21], qreg_q[5], qreg_q[23], qreg_q[24], qreg_q[25], qreg_q[26])
# circuit.measure(qreg_q[12], creg_c0[0])
# circuit.measure(qreg_q[8], creg_c0[1])
# circuit.measure(qreg_q[16], creg_c0[2])
# circuit.measure(qreg_q[9], creg_c0[3])
# circuit.measure(qreg_q[19], creg_c0[4])
# circuit.measure(qreg_q[1], creg_c0[5])
# circuit.measure(qreg_q[4], creg_c0[6])
# print('Profondit√† circuito transpilato: ' + str(circuit.depth()))
# job_transpiler = execute(qc, Aer.get_backend(selected_backend), shots=num_shots)
# job_stats_transpiler = job_transpiler.result().get_counts()
# print("TRANSPILER IN LOCALE: " + str(job_stats_transpiler))
# print('Profondit√† circuito transpilato: ' + str(circuit.depth()))
# transpile_circuit_2 = transpile(circuit, Aer.get_backend(selected_backend))
# dag_circuit_2 = circuit_to_dag(transpile_circuit_2)
# print(dag_circuit_2.count_ops_longest_path())
# print(circuit.depth())
# circuit.draw(output='mpl', filename='esperimento_su_width_2.png')

# in remoto

# IBMQ.load_account()
# # num_shots_reale = 2500
# BACKEND = 'ibmq_montreal' # 
# provider_reale = IBMQ.get_provider(hub = 'partner-cnr', group = 'icar-napoli', project = 'ferrante')
# # provider_reale = IBMQ.get_provider(hub = 'ibm-q')
# # provider_reale = IBMQ.get_provider(hub = 'partner-cnr', group = 'simulators', project = 'simulators') # per simulatori
# backend_reale = provider_reale.get_backend(BACKEND) 
# job_reale = execute(qc, backend = backend_reale, shots=num_shots)

# PRIMO CASO 10+11 statevector_simulator: {'101': 5000}
# SECONDO CASO 100+111 statevector_simulator: {'1011': 5000}
# TERZO CASO 1000+1111 statevector_simulator: {'10111': 5000}