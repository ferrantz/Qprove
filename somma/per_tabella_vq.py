from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
from numpy import pi
from qiskit.circuit.library import QuantumVolume

qreg_q = QuantumRegister(9, 'q')
creg_c0 = ClassicalRegister(3, 'c0')
circuit = QuantumCircuit(qreg_q, creg_c0)

circuit.x(qreg_q[0])
circuit.x(qreg_q[1])
circuit.x(qreg_q[2])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.cx(qreg_q[2], qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.rz(1.5707963267948966, qreg_q[3])
circuit.sx(qreg_q[3])
circuit.rz(1.5707963267948966, qreg_q[3])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[2])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.rz(-0.7853981633974483, qreg_q[2])
circuit.cx(qreg_q[1], qreg_q[4])
circuit.cx(qreg_q[4], qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[4])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.cx(qreg_q[2], qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.rz(0.7853981633974483, qreg_q[1])
circuit.cx(qreg_q[4], qreg_q[1])
circuit.rz(-0.7853981633974483, qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[0])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.rz(0.7853981633974483, qreg_q[0])
circuit.rz(0.7853981633974483, qreg_q[4])
circuit.cx(qreg_q[1], qreg_q[4])
circuit.rz(0.7853981633974483, qreg_q[1])
circuit.rz(-0.7853981633974483, qreg_q[4])
circuit.cx(qreg_q[1], qreg_q[4])
circuit.cx(qreg_q[4], qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[4])
circuit.cx(qreg_q[1], qreg_q[0])
circuit.rz(-0.7853981633974483, qreg_q[0])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[0])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.rz(1.5707963267948966, qreg_q[8])
circuit.sx(qreg_q[8])
circuit.rz(1.5707963267948966, qreg_q[8])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[8], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.rz(-0.7853981633974483, qreg_q[5])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.rz(0.7853981633974483, qreg_q[3])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.rz(-0.7853981633974483, qreg_q[3])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.rz(0.7853981633974483, qreg_q[5])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.rz(0.7853981633974483, qreg_q[2])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.cx(qreg_q[2], qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[0])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.rz(-0.7853981633974483, qreg_q[3])
circuit.rz(0.7853981633974483, qreg_q[5])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.rz(-0.7853981633974483, qreg_q[5])
circuit.cx(qreg_q[8], qreg_q[5])
circuit.rz(0.7853981633974483, qreg_q[5])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.rz(0.7853981633974483, qreg_q[3])
circuit.rz(-0.7853981633974483, qreg_q[5])
circuit.cx(qreg_q[8], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[8], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.rz(-0.7853981633974483, qreg_q[3])
circuit.rz(0.7853981633974483, qreg_q[5])
circuit.rz(2.356194490192345, qreg_q[8])
circuit.sx(qreg_q[8])
circuit.rz(1.5707963267948966, qreg_q[8])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[8], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[3], qreg_q[2])
circuit.rz(0.7853981633974483, qreg_q[2])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.rz(0.7853981633974483, qreg_q[1])
circuit.rz(-0.7853981633974483, qreg_q[2])
circuit.cx(qreg_q[3], qreg_q[2])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.cx(qreg_q[2], qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.rz(2.356194490192345, qreg_q[1])
circuit.sx(qreg_q[1])
circuit.rz(1.5707963267948966, qreg_q[1])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[0])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.cx(qreg_q[3], qreg_q[2])
circuit.rz(-0.7853981633974483, qreg_q[2])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.cx(qreg_q[2], qreg_q[1])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.rz(2.356194490192345, qreg_q[3])
circuit.sx(qreg_q[3])
circuit.rz(1.5707963267948966, qreg_q[3])
circuit.cx(qreg_q[8], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.rz(-0.7853981633974483, qreg_q[3])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[8], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.rz(0.7853981633974483, qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[8], qreg_q[5])
circuit.rz(-0.7853981633974483, qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.rz(0.7853981633974483, qreg_q[3])
circuit.rz(0.7853981633974483, qreg_q[8])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.rz(0.7853981633974483, qreg_q[5])
circuit.rz(-0.7853981633974483, qreg_q[8])
circuit.cx(qreg_q[8], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[2])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.rz(-0.7853981633974483, qreg_q[5])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.rz(0.7853981633974483, qreg_q[5])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.rz(0.7853981633974483, qreg_q[2])
circuit.rz(-0.7853981633974483, qreg_q[3])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[5])
circuit.cx(qreg_q[3], qreg_q[2])
circuit.rz(-0.7853981633974483, qreg_q[2])
circuit.rz(0.7853981633974483, qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[2])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.cx(qreg_q[3], qreg_q[2])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.rz(2.356194490192345, qreg_q[5])
circuit.sx(qreg_q[5])
circuit.rz(1.5707963267948966, qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[8], qreg_q[5])
circuit.cx(qreg_q[5], qreg_q[8])
circuit.cx(qreg_q[5], qreg_q[3])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.barrier(qreg_q[4], qreg_q[3], qreg_q[1], qreg_q[0], qreg_q[2], qreg_q[5], qreg_q[6], qreg_q[7], qreg_q[8])
circuit.measure(qreg_q[3], creg_c0[0])
circuit.measure(qreg_q[1], creg_c0[1])
circuit.measure(qreg_q[0], creg_c0[2])

print(circuit.depth())